# to do

- Add inline-5 engine sound profile;
- Fix behavior when changing height: horizon should move, not just back ground.
- Add traffic cars;
- Add opponent cars;
- Add option to specify custom vehicle portrait;
- Add option to specify custom vehicle rotating sprite (for showroom);
- Add option to specify custom vehicle side profile sprite (for showroom or a side drag race mode);
- Add different terrains (in progress);
- Create more props to decorate the road (in progress);
- Add dynamic terrain variation;
- Add optional forced induction sounds;
- Add option for vehicle to specify custom smoke;
- Add gear shifting sounds;
- Add option for vehicle to specify custom gear shifting sound;
- Re-attempt to create jumping physics. Try to find a solution to the problem regarding the vehicle's shadow being fixed on the sprite;
- Add transition effects to each game state (fade in / fade out);
- Introduce dynamic horizontal and vertical tilt when making turns or passing slopes, for a better animation;
- Introduce dynamic zoom perturbations to give a fake sense of depth when accelerating or braking, for a better animation;
- Add vehicle shaking animation (when off-roading or in rough terrain);
- Add music for main menu and optionally for other states;
- Howl engine when selecting car (either a default engine howl or one using the car engine profile);
- Introduce a more human-readable course file format, or create a usable course editor (inspirations: Stunts);
- Use a comma-separated list of gear ratio to specify gear ratios on vehicle properties;
- Add option to select music for next race, maybe with a music selection state;
- Add digital display (???);
- Add road ride sound, for cockpit or high speed/wind scenarios;
- Add more bike engine sound profiles;

# bugs

- Fix incorrect tire animation speed.
- Fix the game's physics calculations regarding torque/power. Currently, torque is incorrect most of the time.
- Fix power at lower RPMs, as RPM is being set as its minimum before power computation
- Test specifying custom shadow sprite/layer positions.

# misc.

A formula to calculate jumping trajectory/speed:

When (PosY > segment.y) immediately after a step with (PosY <= segment.y)
verticalSpeed = vehicle.body.speed * sin(slopeAngle)
PosY += verticalSpeed * dt   

Then while (PosY > segment.y), update:
verticalSpeed += gravity * dt
PosY += verticalSpeed * dt

from https://physics.stackexchange.com/questions/175381/speed-needed-to-make-a-car-jump-from-a-ramp

# brainstorm

Speedometer design with dynamic backlight: lights up circular disc behind the speedometer's pointer.
