!!!!! vehicle definition file !!!!! 
! This file contains information about the vehicle.
! Except for a few cases, most items here can be ommited or set as default.
! When omitted, default values are used. Also some items can also be set with
! special values. Items here described as optional are more "optional" than the others.
authors = Hydren
credits = Chasersgaming (sprite)
comments = An sporty coupe, with a turbo V6 engine.

!!! Required, these cannot be defaulted or omitted !!!
definition = vehicle
vehicle_name = Coupe

# The type of vehicle (car, bike, etc).    (default=car)
vehicle_type = car

### Optional info
vehicle_brand = Default
vehicle_year = 1995

### CHASSIS

# The vehicle's mass, in kg. (default=1250)
vehicle_mass = 1320

# Tire diameter, in mm. Omitted for non-wheeled vehicles.     (default=678; eq. to 26.7 inch, 275/40 R18 tire)
tire_diameter = 627

# (Optinal) The vehicle's driven wheels (front, rear, all). Omitted for non-wheeled vehicles.  (default=rear) 
driven_wheels = rear

### ENGINE

# The engine's maximum RPM. Normal values are 5000-12000.    (default=7000)
engine_maximum_rpm = 7500

# The engine's maximum power, in hp.      (default=320)
engine_maximum_power = 360
#engine_maximum_power_rpm = 6950

# (Optional) Location of the engine in the vehicle (front, middle, rear).    (default=front)
engine_location = front

## Optional engine info
engine_position = longitudinal
engine_configuration = V6
engine_aspiration = turbocharged
engine_valvetrain = DOHC
engine_displacement = 3500
engine_valve_count = 24

### TRANSMISSION

# The number of gears. Any positive integer can be used.    (default=6)
gear_count = 6

# Gear ratios mode. Can be default or custom.
gear_ratios = custom

# If gear_ratios is set as "custom", then these items specify each ratio for each gear, 
# up to gear_count, plus the reverse gear ratio (gear_reverse_ratio) and the differential 
# ratio (gear_differential_ratio).
gear_1_ratio = 3.5
gear_2_ratio = 2.5
gear_3_ratio = 1.9
gear_4_ratio = 1.5
gear_5_ratio = 1.2
gear_6_ratio = 1.0
gear_reverse_ratio = 3.2
gear_differential_ratio = 3.5

### SPRITE

# The image containing all the sprites (sprite sheet)      (default=built-in sprite)
sprite_sheet_file = assets/car-sheet-coupe.png

# (Optional) Alternative sprite sheets that can be selected ingame. Each entry should have its own index.
# The syntax is 'alternate_sprite_sheet<i>_file', where <i> is the alternative sprite index.
# Another syntax can be used, as well, to specify an external properties file to load sprite-related 
# settings for the alternative sprite. The syntax would be 'alternate_sprite_sheet<i>_definition_file'.
# Otherwise all the sprite metrics specified in this file also applies to all alternative sprites.
# Be careful to not mix up indexes (they start at 0).
alternate_sprite_sheet0_file = assets/car-sheet-coupe-black.png
alternate_sprite_sheet1_file = assets/car-sheet-coupe-blue.png
alternate_sprite_sheet2_file = assets/car-sheet-coupe-yellow.png
alternate_sprite_sheet3_file = assets/car-sheet-coupe-green.png
alternate_sprite_sheet4_file = assets/car-sheet-coupe-violet.png

# The number of animations/states (straight-going, turning, etc) on this sheet, arranged top-down.    (default=1)
sprite_state_count = 4

# The dimensions of animation frames.      (width: default=56 / height: default=36)
sprite_frame_width = 56 
sprite_frame_height = 36

# (Optional) The vehicle's width (in pixels) as depicted on the sprite.          (default=85.7% of frame width)
# Although optional, it is recommended to specify this to improve the alignment of effects, such as 
# the tires' burnout smoke. If defaulted or non-specified, it is set as 85.7% of the sprite's 
# frame width.
sprite_vehicle_width = 48

# (Optional) A scaling factor applied to the sprite; 1.0 is no scaling.        (default=1.0)
# Although optional, it is recommended to specify this, otherwise the vehicle can appear too big or 
# too small compared to the others. The recommended way to obtain a suitable value for scale is to 
# divide the vehicle's real life width (in mm) by its width on the sprite (in pixels) and 
# then multiply the result by 24/895.
sprite_scale = 1.0

# (Optional) Individual scaling factors can also be specified for horizontal (x) and vertical (y) axis.     (default=1.0)
sprite_scale_x = 1.0
sprite_scale_y = 1.0

# (Optional) The offset between the sprite's bottom and the depicted contact point of the vehicle.     (default=0)
# Usually the contact point(s) are the bottom of the vehicle's wheels, so this value can be fitted
# with ammount of pixels between the bottom of the sprite and bottom of the wheels. This is useful
# to specify when the sprite has a unusually large shadow, for example.
sprite_contact_offset = 2

# (Optional) The approximate angle (in degrees) depicted on the last sprite (most turned).        (default=60)
# The actual angle depicted on sprites varies a lot and even their most turned position may be small, 
# causing a weird "feeling" in-game that the car is understeering. So specifying a value less than 45
# causes the sprite to "develop" faster (turn faster), althought there is no change on the actual 
# physics of the game. Values greater than 45 makes some sprites not show on screen since the maximum
# angle in-game is supposed to be 45 degreeds (pi/4 radians). Specifying this value is optional and 
# if you are unsure, set as default or leave unspecified. 
sprite_max_depicted_turn_angle = 16

# (Optional) The duration (seconds) of each frame. Can be an fractionary number, i.e. 0.25 (sec).    (default=-1; no cycle)
# This value can (and should) be ommitted or set as -1 when there is only 1 frame in each state.
sprite_frame_duration = 0.25

# (Optional) The number of frames on each state.    (default=1)
# You can ommit specifying this for the states that have only 1 frame in them.
# You can also specify a single value for all states at once using the property 'sprite_frame_count'.
# If 'sprite_frame_count' is specified, all states will be set with this value, but will be overriden
# individually by each 'sprite_state<i>_frame_count' property.
sprite_state0_frame_count = 3
sprite_state1_frame_count = 3
sprite_state2_frame_count = 3
sprite_state3_frame_count = 3

# (Optional) The positions of the brakelights in relation to the vehicle's sprite.
# These coordinates are used to position the brakelights effects on the screen when braking and 
# probably should be different for each sprite state. Fill these values by measuring the position
# of where should the brakelights appear on each sprite state. Pay attention on the number of
# positions as they should match the number of states. For each entry, a pair of integers is
# expected. Alternatively, you may specify the X and Y position in two separate entries.
#
# Example: "brakelights_position0 = 10, 25"
#          or 
#          "brakelights_position0_x = 10"
#          "brakelights_position0_y = 25"
#
# If nothing is specified, a default position will be generated, but it's almost surely won't
# match appropriately. If the 'brakelights_multiple_sprites' property is true, the default
# positions will all be set zero.
brakelights_position0 = 13, 22
brakelights_position1 = 15, 22
brakelights_position2 = 17, 22
brakelights_position3 = 21, 22

# (Optional) The filename of the image containing the sprite for the brakelights effect overlay.      (default=<built-in asset>)
# The image must contain either a single image or a sheet with a number of sprites matching the
# amount of states (each case should be reported in the 'brakelights_multiple_sprites' property).
# Note that the actual brakelight image portraited in the sheet should be in the same scale as
# the vehicle sprite sheet if the 'brakelights_multiple_sprites' property is set as true.
# If unspecified or set as default, a built-in asset will be used for the effect.
brakelights_sprite_filename = default

# (Optional) Specifies whether the brakelight sprite is a single image or a sprite sheet.         (default=false)
# If false, it's assumed that there only a single brakelight sprite on the image file, and it 
# will be used for all animation states. If true, the brakelight animation is assumed instead
# to have multiple sprites (sheet) on the image file, one per each animation state. The 
# brakelight sheet is also assumed to contain N equally sized frames, where N is the number of 
# states of this animation.
brakelights_multiple_sprites = false

# (Optional) Specifies whether the brakelight sprite will be drawn mirrowed as well.              (default=true)
# If true (default), a mirrowed version of the brakeligthts animation is also drawn in the 
# opposite of the vehicle. The position of the mirrowed brakelights is a mirrowed version of the
# brakelights positions, minus the animation width.
brakelights_mirrowed = true

# (Optional) Specifies scaling factor applied to the brakelight sprite; 1.0 is no scaling.        (default=<depends>)
# If a non-default 'brakelights_sprite_filename' property is specified, this scale is assumed
# to be the same as the main vehicle sprite's scale. Otherwise it is assumed to be 1.0.
brakelights_sprite_scale = default

# (Optional) Specifies an offset applied to the brakelights sprites' positions, meant to          (default=<depends>)
# center them when necessary, i.e. mirrowed sprites with surrounding alpha regions.
# If a value is specified for the 'brakelights_sprite_filename' property, this value is
# defaulted to 0. If 'brakelights_sprite_filename' is left unspecified of defaulted, a builtin
# value is set to match the default brakelights sprite metrics.
brakelights_sprite_offset_x = default
brakelights_sprite_offset_y = default

### SOUND
! Sound can, as the others, be default or omitted.
# can be defined as default 
#sound = default

# can be defined to be muted 
#sound = none

# can be defined as an class
#sound = default_v6_engine

# or can be customized
sound = custom

## Custom sound

# number of sample sounds
sound_count = 5

# (optional) specified whether the engine sound should be pitched according to current RPM.     (default=true)
sound_rpm_pitching = true

# (optional) a multiplier that specifies how the pitch changes according to the                 (default=2)
# RPM variation. For a vehicle with a four-stroke engine (i.e. common cars) this value
# should be typically half the number of cylinders of the engine (2 for 4-cylinder, 
# 3 for 6-cylinder, etc).
sound_rpm_pitching_factor = 3

# Each sample engine sound file with its starting RPM range. 
# Specify a sound file with notation 'soundX', where X is a positive integer. Specify a
# RPM range for each sound with the '_rpm' suffix ('soundX_rpm'). Besides a RPM value, 
# it can also be set as -1 (unspecified). If left unspecified, it is attempted to set 
# default values, but usually they end up being unsuitable. Specify the RPM range 
# depicted by the given sound with the '_depicted_rpm' suffix ('soundX_depicted_rpm'),
# or alternatively specify a pitch factor for the given sound with the '_pitch_factor' 
# suffix ('soundX_pitch_factor').
sound0 = assets/sound/engine/v6_engine1_idle.ogg
sound0_rpm = 0
sound1 = assets/sound/engine/v6_engine1_low.ogg
sound1_rpm = 1100
sound2 = assets/sound/engine/v6_engine1_midlow.ogg
sound2_rpm = 2000
sound3 = assets/sound/engine/v6_engine1_midhigh.ogg
sound3_rpm = 4500
sound4 = assets/sound/engine/v6_engine1_high.ogg
sound4_rpm = 6000
