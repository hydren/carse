!!!!! vehicle definition file !!!!! 
! This file contains information about the vehicle.
! Except for a few cases, most items here can be ommited or set as default.
! When omitted, default values are used. Also some items can also be set with
! special values. Items here described as optional are more "optional" than the others.
authors = Hydren
credits = Chasersgaming (sprite)
comments = An uprated and facelifted version of the Coupe, with a rare supercharged V12 engine.

!!! required, these cannot be defaulted or omitted !!!
definition = vehicle
vehicle_name = Coupe II

# The type of vehicle (car, bike, etc).    (default=car)
vehicle_type = car

### Optional info
vehicle_brand = Default
vehicle_year = 1997

### CHASSIS

# The vehicle's mass, in kg. (default=1250)
vehicle_mass = 1455

# Tire diameter, in mm. Omitted for non-wheeled vehicles.     (default=678; eq. to 26.7 inch, 275/40 R18 tire)
tire_diameter = 685

# (Optinal) The vehicle's driven wheels (front, rear, all). Omitted for non-wheeled vehicles.  (default=rear) 
driven_wheels = rear

### ENGINE

# The engine's maximum RPM. Normal values are 5000-12000.    (default=7000)
engine_maximum_rpm = 6500

# The engine's maximum power, in hp.      (default=320)
engine_maximum_power = 520

# (Optional) The rpm range from which the engine outputs the maximum power.
# All engines displays a power curve, from which there is a RPM range which 
# produces the maximum power possible. Specifying this range hints the game
# that the maximum power should be available at this range. If this item is
# left unspecified of default, it is estimated one such range, based on the
# formula: MaxPowerRPM = (5*MaxRPM + 1000)/6.
# (Obs: the maximum torque RPM range is hardcoded as 2/3 of the max. RPM.
engine_maximum_power_rpm = 7000

# (Optional) Location of the engine in the vehicle (front, middle, rear).    (default=front)
engine_location = front

## Optional engine info
engine_position = longitudinal
engine_configuration = V12
engine_aspiration = supercharged
engine_valvetrain = SOHC
engine_displacement = 5300
engine_valve_count = 24

### TRANSMISSION

# The number of gears. Any positive integer can be used.    (default=6)
gear_count = 6

# Gear ratios mode. Can be default or custom.
gear_ratios = custom

# If gear_ratios is set as "custom", then these items specify each ratio for each gear, 
# up to gear_count, plus the reverse gear ratio (gear_reverse_ratio) and the differential 
# ratio (gear_differential_ratio).
gear_1_ratio = 3.3
gear_2_ratio = 2.2
gear_3_ratio = 1.7
gear_4_ratio = 1.4
gear_5_ratio = 1.2
gear_6_ratio = 1.0
gear_reverse_ratio = 3.2
gear_differential_ratio = 2.8

### SPRITE

# The image containing all the sprites (sprite sheet)      (default=built-in sprite)
sprite_sheet_file = data/vehicles/example2/sheet.png

# The number of animations/states (straight-going, turning, etc) on this sheet, arranged top-down.    (default=1)
sprite_state_count = 4

# The dimensions of animation frames.      (width: default=56 / height: default=36)
sprite_frame_width = 56 
sprite_frame_height = 36

# (Optional) The vehicle's width (in pixels) as depicted on the sprite.          (default=85.7% of frame width)
# Although optional, it is recommended to specify this to improve the alignment of effects, such as 
# the tires' burnout smoke. If defaulted or non-specified, it is set as 85.7% of the sprite's 
# frame width.
sprite_vehicle_width = 48

# (Optional) A scaling factor applied to the sprite; 1.0 is no scaling.        (default=1.0)
# Although optional, it is recommended to specify this, otherwise the vehicle can appear too big or 
# too small compared to the others. The recommended way to obtain a suitable value for scale is to 
# divide the vehicle's real life width (in mm) by its width on the sprite (in pixels) and 
# then multiply the result by 24/895.
sprite_scale = 1.0

# (Optional) Individual scaling factors can also be specified for horizontal (x) and vertical (y) axis.     (default=1.0)
sprite_scale_x = 1.0
sprite_scale_y = 1.0

# (Optional) The offset between the sprite's bottom and the depicted contact point of the vehicle.     (default=0)
# Usually the contact point(s) are the bottom of the vehicle's wheels, so this value can be fitted
# with ammount of pixels between the bottom of the sprite and bottom of the wheels. This is useful
# to specify when the sprite has a unusually large shadow, for example.
sprite_contact_offset = 2

# (Optional) The approximate angle (in degrees) depicted on the last sprite (most turned).        (default=60)
# The actual angle depicted on sprites varies a lot and even their most turned position may be small, 
# causing a weird "feeling" in-game that the car is understeering. So specifying a value less than 45
# causes the sprite to "develop" faster (turn faster), althought there is no change on the actual 
# physics of the game. Values greater than 45 makes some sprites not show on screen since the maximum
# angle in-game is supposed to be 45 degreeds (pi/4 radians). Specifying this value is optional and 
# if you are unsure, set as default or leave unspecified. 
sprite_max_depicted_turn_angle = 16

# (Optional) The duration (seconds) of each frame. Can be an fractionary number, i.e. 0.25 (sec).    (default=-1; no cycle)
# This value can (and should) be ommitted or set as -1 when there is only 1 frame in each state.
sprite_frame_duration = -1

# (Optional) The number of frames on each state.    (default=1)
# You can ommit specifying this for the states that have only 1 frame in them.
sprite_state0_frame_count = 1
sprite_state1_frame_count = 1
sprite_state2_frame_count = 1
sprite_state3_frame_count = 1

### SOUND
# sound can be defined as an class
sound = default_v12_engine

